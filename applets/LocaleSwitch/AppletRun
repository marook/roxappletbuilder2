#!/usr/bin/env python
#
# Copyright 2011 Markus Pielmeier
#
# This file is part of roxappletbuilder2.
#
# roxappletbuilder2 is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# roxappletbuilder2 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with roxappletbuilder2.  If not, see <http://www.gnu.org/licenses/>.
#

from roxappletbuilder.main import main
import gtk

class LocaleSwitchApp(object):

    def _exitApp(self):
        import sys

        # TODO is there some kind of gtk.quit()?
        sys.exit(0)

    def _exitAppRequest(self, event):
        self._exitApp()

    def _switchState(self, event):
        # TODO
        pass

    def _createMenu(self):
        m = gtk.Menu()

        exit = gtk.MenuItem('Exit')
        m.append(exit)
        exit.connect('activate', self._exitAppRequest)
        exit.show_all()

        return m

    def __contextMenuCallback(self, widget, event):
        if((event.type == gtk.gdk.BUTTON_PRESS) and (event.button == 3)):
            widget.popup(None, None, None, event.button, event.time)
            
            return True
            
        return False
    
    def _parseOptions(self):
        from optparse import OptionParser

        parser = OptionParser()
    
        (options, args) = parser.parse_args()

        if(len(args) == 0):
            self.xid = None
        else:
            self.xid = int(args[0])

    def __init__(self):
        self.name = 'LocaleSwitch'
        self._parseOptions()
        self._rootWidget = None

    @property
    def rootWidget(self):
        if(self._rootWidget is None):
            menu = self._createMenu()

            switch = gtk.Button()
            switch.connect('clicked', self._switchState)
            switch.connect_object('button-press-event', self.__contextMenuCallback, menu)

            # TODO init button with initial state

            self._rootWidget = switch

        return self._rootWidget

if(__name__ == '__main__'):
    main(LocaleSwitchApp())
